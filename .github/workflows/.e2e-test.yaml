name: E2E Test
on:
  workflow_call:

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: lib
        path: packages
    - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
    - name: Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        cache: pnpm
        node-version-file: ./.node-version
    - name: Install moreutils
      run: sudo apt-get update && sudo apt-get install -y moreutils
    - name: Set up Verdaccio
      run: |
        cat << EOF > "$HOME/.npmrc"
        registry=http://localhost:4873
        EOF
        nohup pnpm verdaccio --config ./etc/verdaccio/config.yaml &
        for i in $(seq 1 30); do
          if curl -s http://localhost:4873/-/ping; then
            echo "✅ Verdaccio is up!"
            pnpm exec npm-cli-login -u test -p test -e test@example.com -r http://localhost:4873
            exit 0
          fi
          echo "⏳ Waiting for Verdaccio… ($i/30)"
          sleep 2
        done
        echo "❌ Verdaccio did not start in time" >&2
        exit 1

    - name: Publish to Verdaccio
      run: |
        for workspace in $(pnpm ls -r --filter "./packages/*" --depth -1 --parseable); do
          cd $workspace
          jq 'del(.publishConfig.provenance)' package.json | sponge package.json
          jq '.version = "0.0.0-e2e-${{ github.sha }}"' package.json | sponge package.json
        done
        pnpm publish -r --no-git-checks --registry http://localhost:4873
    - uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
      with:
        path: ./etc/verdaccio/storage
        name: verdaccio

  active_support_deno_lts:
    name: Active Support / Deno LTS
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: verdaccio
        path: ./etc/verdaccio/storage
    - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
    - name: Use Graphviz
      uses: ts-graphviz/setup-graphviz@b1de5da23ed0a6d14e0aeee8ed52fdd87af2363c # v2.0.2
    - name: Use Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
      with:
        node-version-file: ./.node-version
        cache: pnpm
    - name: Use Deno
      uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
      with:
        deno-version: lts
    - name: Install moreutils
      run: sudo apt-get update && sudo apt-get install -y moreutils
    - name: Install Dependencies
      run: pnpm install --frozen-lockfile
    - name: Set up Verdaccio
      run: |
        cat << EOF > "$HOME/.npmrc"
        registry=http://localhost:4873
        EOF
        nohup pnpm verdaccio --config ./etc/verdaccio/config.yaml &
        for i in $(seq 1 30); do
          if curl -s http://localhost:4873/-/ping; then
            echo "✅ Verdaccio is up!"
            pnpm exec npm-cli-login -u test -p test -e test@example.com -r http://localhost:4873
            exit 0
          fi
          echo "⏳ Waiting for Verdaccio… ($i/30)"
          sleep 2
        done
        echo "❌ Verdaccio did not start in time" >&2
        exit 1

    - name: Run Deno
      working-directory: examples
      run: |
        deno info
        deno install --no-lock
        deno run --no-lock --allow-run --allow-write sample.ts
